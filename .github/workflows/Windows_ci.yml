# Copyright (C) 2025 Pedro Henrique / phkaiser13
# main_ci_windows.yml - Continuous Integration workflow for the gitph project on Windows.
#
# This workflow automates the build process of the application for Windows
# using the MSVC toolchain and vcpkg for dependency management.
# SPDX-License-Identifier: Apache-2.0

name: Build gitph (Windows)

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    name: Build for Windows (MSVC)
    runs-on: windows-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install C/C++ dependencies (vcpkg)
        uses: lukka/run-vcpkg@v11
        with:
          # Lista de pacotes necessários para o seu projeto.
          # nlohmann-json é incluído para acelerar o build, evitando o FetchContent.
          vcpkgGitCommitId: 'b583134733ad5e4a87bd7e8d22a4368952396e3a' # Trava a versão do vcpkg para builds consistentes
          vcpkgJsonGlob: '**/vcpkg.json'
          vcpkgTriplet: 'x64-windows' 


      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2


      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release


      - name: Compile Project
        run: cmake --build build --config Release --parallel

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: gitph-windows-msvc
          path: |
            build/bin/gitph.exe
            build/bin/modules/
            build/installer/installer_main.exe
