# Copyright (C) 2025 Pedro Henrique / phkaiser13
# Ubuntu-Like_ci.yml - Workflow de Integração Contínua para o projeto gitph.
#
# Este workflow automatiza o processo de build e release da aplicação.
# Ele garante que o projeto compila corretamente em um ambiente limpo
# e cria pacotes de distribuição automaticamente quando uma nova versão é marcada.
# SPDX-License-Identifier: Apache-2.0

name: Build e Release do gitph

# Gatilhos do workflow:
on:
  push:
    branches: [ "main" ] # Executa quando há um push para a branch main
    tags:
      - 'v*'          # Executa quando uma tag como v1.0.0 é criada
  pull_request:
    branches: [ "main" ] # Executa em pull requests para a main

jobs:
  # Job principal de build que compila e verifica o projeto
  build:
    name: Build e Teste
    runs-on: ubuntu-latest

    steps:
      # 1. Clona o repositório
      - name: Checkout do código
        uses: actions/checkout@v4

      # 2. Instala as dependências de sistema (C/C++, Lua, Curl)
      #    CORREÇÃO: Adicionado 'pkg-config' para que o CMake possa encontrar as bibliotecas (como a Lua)
      - name: Instalar dependências do sistema
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake pkg-config liblua5.4-dev libcurl4-openssl-dev nlohmann-json3-dev

      # 3. Configura o ambiente Go
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # Usando uma versão mais recente do Go. Ajuste se o seu go.mod exigir 1.18.

      # 4. Configura o ambiente Rust (com cache integrado)
      #    MELHORIA: Usando uma action específica para Rust que simplifica o cache.
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@v2

      # 5. Configura e compila o projeto usando CMake em modo Release
      - name: Configurar CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Compilar Projeto
        run: cmake --build build --parallel

      # 6. Salva os artefatos de build para o job de release poder usá-los
      - name: Upload dos artefatos de build
        uses: actions/upload-artifact@v4
        with:
          name: gitph-build-artifacts
          path: |
            build/bin/
            src/plugins/
            LICENSE
