name: 'Build Windows Installer (NSIS)'

on:
  push:
    branches:
      - "main"
    tags:
      - 'v*'

jobs:
  build-windows-installer:
    name: Build Windows Installer (NSIS)
    runs-on: windows-latest
    env:
      VCPKG_ROOT: ${{ github.workspace }}\vcpkg
      VCPKG_DEFAULT_TRIPLET: x64-windows

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install CMake and Ninja
        uses: jwlawson/actions-setup-cmake@v1
        with:
          cmake-version: '3.29.3'
      - run: choco install ninja -y

      - name: Install vcpkg and libraries
        run: |
          git clone https://github.com/microsoft/vcpkg.git $env:VCPKG_ROOT
          cd $env:VCPKG_ROOT
          .\bootstrap-vcpkg.bat
          .\vcpkg.exe install curl lua nlohmann-json --triplet x64-windows
        shell: pwsh

      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Configure and Build Project + Installer
        run: |
          cmake -S . -B build -G "Visual Studio 17 2022" -A x64 `
            -DCMAKE_TOOLCHAIN_FILE="${{ env.VCPKG_ROOT }}\scripts\buildsystems\vcpkg.cmake" `
            -DPHGIT_BUILD_INSTALLER=ON `
            -DCMAKE_BUILD_TYPE=Release
          cmake --build build --config Release --parallel
        shell: pwsh

      - name: Setup NSIS
        uses: joncloud/setup-nsis@v1

      - name: Prepare Staging Directory
        run: |
          mkdir staging
          cp build/bin/Release/phgit.exe staging/
          cp build/bin/Release/phgit-installer.exe staging/
          cp build/bin/Release/*.dll staging/
          cp installer/config.json staging/
          cp -r build/bin/modules staging/
          cp -r src/plugins staging/
          cp LICENSE staging/
        shell: bash

      - name: Compile NSIS Installer
        run: |
          $version = "${{ github.ref_name }}".Substring(1)
          makensis.exe /DPRODUCT_VERSION=$version installer/packaging/nsis/phgit.nsi
        shell: pwsh

      - name: Upload Installer to Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: phgit-*-installer.exe
          asset_name: phgit-windows-x64-${{ github.ref_name }}-setup.exe
          tag: ${{ github.ref_name }}
          overwrite: true
