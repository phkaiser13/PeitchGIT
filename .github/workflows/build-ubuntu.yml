name: Build gitph (Ubuntu/Debian-like Systems)

# Workflow triggers:
on:
  # Run on pushes to the main branch
  push:
    branches: [ "main" ]
    # Also run when a tag starting with 'v' is pushed
    tags:
      - 'v*'
  # Run on pull requests targeting the main branch
  pull_request:
    branches: [ "main" ]

jobs:
  # Main build job that compiles and verifies the project
  build:
    name: Build and Package (Ubuntu)
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository's code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Install system dependencies (C/C++, Lua, Curl, etc.)
      # pkg-config is crucial for CMake to locate libraries like Lua correctly.
      - name: Install system dependencies
        run: sudo apt-get update && sudo apt-get install -y build-essential cmake pkg-config liblua5.4-dev libcurl4-openssl-dev nlohmann-json3-dev


      # Step 4: Set up the Rust toolchain and cache dependencies
      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable
      - name: Cache Rust dependencies
        uses: Swatinem/rust-cache@v2

      # Step 5: Configure the project using CMake in Release mode for optimizations
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      # Step 6: Compile the project using multiple cores for speed
      - name: Compile Project
        run: cmake --build build --parallel



      # Step 9: Upload intermediate build artifacts for non-tag builds (CI).
      # This is useful for debugging or for other jobs that might need the raw build output.
      # The `if` condition ensures this step runs for pushes and pull requests, but NOT for tags.
      - name: Upload CI Build Artifacts (not for tags)
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v4
        with:
          # A different artifact name to avoid confusion with the release package.
          name: gitph-build-artifacts-ubuntu
          # Upload the contents of the build directory for inspection.
          path: |
            build/bin/
            src/plugins/
            LICENSE
          # A shorter retention period for CI artifacts is common.
          retention-days: 3
