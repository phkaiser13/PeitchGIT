# .github/workflows/managers.yml
name: 'Publish to Package Managers'

# Aciona o workflow apenas quando um novo Release é PUBLICADO
on:
  release:
    types: [published]

jobs:
  publish:
    name: Update Homebrew, AUR, and vcpkg
    runs-on: ubuntu-latest
    
    steps:
      # 1. Extrai a versão da tag do release
      - name: 'Get release version from tag'
        run: |
          echo "RELEASE_TAG=${{ github.ref_name }}" >> $GITHUB_ENV
          echo "RELEASE_VERSION=${{ github.ref_name#v }}" >> $GITHUB_ENV

      # 2. Baixa o código-fonte e calcula os hashes
      - name: 'Download source tarball and calculate checksums'
        run: |
          TARBALL_URL="https://github.com/${{ github.repository }}/archive/refs/tags/${{ env.RELEASE_TAG }}.tar.gz"
          curl -L -o source.tar.gz "$TARBALL_URL"
          echo "TARBALL_SHA256=$(sha256sum source.tar.gz | awk '{print $1}')" >> $GITHUB_ENV
          echo "TARBALL_SHA512=$(sha512sum source.tar.gz | awk '{print $1}')" >> $GITHUB_ENV

      # --- Bloco de Configuração de Git ---
      # Passo explícito para configurar a identidade do Git que será usada para os pushes
      - name: 'Configure Git for pushes'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      # --- Homebrew Tap ---
      - name: 'Checkout Homebrew Tap repository'
        uses: actions/checkout@v4
        with:
          repository: 'phkaiser13/homebrew-tap' # Corrigido para seu username
          token: ${{ secrets.PAT_TOKEN }}
          path: 'homebrew-tap'

      - name: 'Update Homebrew formula'
        run: |
          FORMULA_PATH="homebrew-tap/Formula/gitph.rb"
          sed -i -e "s|url \".*\"|url \"https://github.com/phkaiser13/peitchgit/archive/refs/tags/${{ env.RELEASE_TAG }}.tar.gz\"|" "${FORMULA_PATH}"
          sed -i -e "s|sha256 \".*\"|sha256 \"${{ env.TARBALL_SHA256 }}\"|" "${FORMULA_PATH}"
        
      - name: 'Commit and push changes to Homebrew Tap'
        run: |
          cd homebrew-tap
          git add Formula/gitph.rb
          if ! git diff --staged --quiet; then
            git commit -m "chore: Update gitph formula to ${{ env.RELEASE_TAG }}"
            git push
          else
            echo "No changes to commit for Homebrew."
          fi
          cd ..

      # --- AUR ---
      - name: 'Checkout AUR repository'
        uses: actions/checkout@v4
        with:
          repository: 'phkaiser13/aur-gitph' # Corrigido para seu username
          token: ${{ secrets.PAT_TOKEN }}
          path: 'aur-gitph'

      - name: 'Update PKGBUILD'
        run: |
          cd aur-gitph
          sed -i -e "s/pkgver=.*/pkgver=${{ env.RELEASE_VERSION }}/" PKGBUILD
          sed -i -e "s/sha256sums=('.*')/sha256sums=('${{ env.TARBALL_SHA256 }}')/" PKGBUILD
          sudo apt-get update && sudo apt-get install -y arch-install-scripts
          makepkg --printsrcinfo > .SRCINFO
          
      - name: 'Commit and push changes to AUR repository'
        run: |
          cd aur-gitph
          git add PKGBUILD .SRCINFO
          if ! git diff --staged --quiet; then
            git commit -m "chore: Update gitph PKGBUILD to ${{ env.RELEASE_VERSION }}"
            git push
          else
            echo "No changes to commit for AUR."
          fi
          cd ..

      # --- vcpkg Registry ---
      - name: 'Checkout vcpkg registry repository'
        uses: actions/checkout@v4
        with:
          repository: 'phkaiser13/vcpkg-registry' # Corrigido para seu username
          token: ${{ secrets.PAT_TOKEN }}
          path: 'vcpkg-registry'

      - name: 'Update vcpkg port files'
        run: |
          VCPKG_JSON="vcpkg-registry/ports/gitph/vcpkg.json"
          PORTFILE="vcpkg-registry/ports/gitph/portfile.cmake"
          sed -i -e "s/\"version\": \".*\"/\"version\": \"${{ env.RELEASE_VERSION }}\"/" "${VCPKG_JSON}"
          sed -i -e "s/REF \".*\"/REF \"${{ env.RELEASE_TAG }}\"/" "${PORTFILE}"
          sed -i -e "s/SHA512 \".*\"/SHA512 \"${{ env.TARBALL_SHA512 }}\"/" "${PORTFILE}"
          
      - name: 'Commit and push changes to vcpkg registry'
        run: |
          cd vcpkg-registry
          git add ports/gitph/vcpkg.json ports/gitph/portfile.cmake
          if ! git diff --staged --quiet; then
            git commit -m "chore(gitph): Update port to ${{ env.RELEASE_TAG }}"
            git push
          else
            echo "No changes to commit for vcpkg."
          fi
